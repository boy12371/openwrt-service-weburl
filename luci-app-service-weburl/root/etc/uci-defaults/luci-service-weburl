#!/bin/sh

. /lib/functions.sh

LOG_TAG="luci-service-weburl"

# 加载配置
config_load service_weburl
config_get DB_PATH service_weburl db_path "/etc/config/service_weburl.db"
config_get DB_PERMS service_weburl db_perms "600"

# 记录错误并退出
log_error_and_exit() {
    logger -t "$LOG_TAG" -p error "$1"
    exit 1
}

# 检查sqlite3命令是否存在
if ! command -v sqlite3 >/dev/null; then
    log_error_and_exit "sqlite3 command not found, please install sqlite3-cli package"
fi

# 检查数据库目录是否存在，不存在则创建
if [ ! -d "/etc/config" ]; then
    if ! mkdir -p "/etc/config"; then
        log_error_and_exit "Failed to create database directory /etc/config"
    fi
    logger -t "$LOG_TAG" "Created database directory /etc/config"
fi

# 如果数据库已存在则跳过初始化
if [ -f "$DB_PATH" ]; then
    logger -t "$LOG_TAG" "Database already exists at $DB_PATH, skipping initialization"
    exit 0
fi

# 初始化数据库
logger -t "$LOG_TAG" "Initializing database at $DB_PATH"
if ! sqlite3 "$DB_PATH" <<EOF
CREATE TABLE services (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    url TEXT NOT NULL,
    description TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE logs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    action TEXT NOT NULL,
    message TEXT,
    service_id INTEGER,
    FOREIGN KEY(service_id) REFERENCES services(id) ON DELETE CASCADE
);

CREATE TRIGGER update_service_timestamp 
AFTER UPDATE ON services 
BEGIN
    UPDATE services SET updated_at = CURRENT_TIMESTAMP WHERE id = NEW.id;
END;
EOF
then
    log_error_and_exit "Failed to initialize database at $DB_PATH"
fi

# 设置数据库权限
if ! chmod 640 "$DB_PATH"; then
    log_error_and_exit "Failed to set permissions on $DB_PATH"
fi

logger -t "$LOG_TAG" "Database initialized successfully at $DB_PATH"
exit 0